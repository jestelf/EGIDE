{
  "id": "platform",
  "name": "EGIDE Platform",
  "description": "Unified digital platform providing reusable capabilities, shared contracts and automation pipelines for product teams.",
  "principles": [
    "Platform-first: every capability is exposed as an internal service with clear ownership",
    "Canonical data contracts shared across products and validated automatically",
    "API-first delivery with backward-compatible change management",
    "Observability baked into each domain via common telemetry standards",
    "Autonomous cross-functional teams aligned by business domains"
  ],
  "services": [
    {
      "id": "customer-onboarding",
      "slug": "customer-onboarding",
      "name": "Customer Onboarding",
      "summary": "End-to-end onboarding experience from application to activation with automated risk assessment.",
      "mission": "Make the first customer journey self-served, transparent and regulation compliant.",
      "owner": "Stream Onboarding",
      "lead": "Irina Volkova",
      "status": "production",
      "impact": "High",
      "sla": "99.95%",
      "area": "Acquisition",
      "repo": "ssh://git/egide/services/customer-onboarding",
      "roadmap": [
        "Automated risk repricing per segment",
        "Unified tariff storefront with personalization",
        "Status synchronisation with partner banks"
      ],
      "categoryNotes": {
        "frontend": "UI team owns self-service flows and accessibility for mobile and desktop.",
        "backend": "Event-driven microservices keep every KYC process transactional and traceable.",
        "qa": "QA guild covers regression suites, accessibility and contract smoke tests."
      },
      "frontend": [
        {
          "id": "customer-portal",
          "name": "Customer Portal",
          "description": "React entry point displaying onboarding progress, tasks and SLA timers.",
          "stack": "React 18, Vite, RTK Query",
          "status": "prod",
          "lead": "Dmitry Mizin",
          "repo": "ssh://git/egide/services/customer-onboarding/frontend/customer-portal",
          "metrics": {
            "activeUsers": "42K MAU",
            "coreWebVitals": "LCP 1.4s"
          }
        },
        {
          "id": "kyc-form",
          "name": "KYC Form",
          "description": "Adaptive multi-step wizard with conditional validation and document capture.",
          "stack": "React Hook Form, Zustand, WebRTC",
          "status": "prod",
          "lead": "Anna Savina",
          "repo": "ssh://git/egide/services/customer-onboarding/frontend/kyc-form",
          "metrics": {
            "conversion": "+18% after A/B",
            "latency": "65ms avg validation"
          }
        }
      ],
      "backend": [
        {
          "id": "workflow-engine",
          "name": "Workflow Engine",
          "description": "Kotlin orchestration of onboarding states, compensating actions and SLA timers.",
          "stack": "Kotlin, Spring Boot, Kafka",
          "status": "prod",
          "lead": "Pavel Romanov",
          "repo": "ssh://git/egide/services/customer-onboarding/backend/workflow-engine",
          "metrics": {
            "throughput": "12K processes/hour",
            "latency": "350ms P95"
          }
        },
        {
          "id": "risk-evaluator",
          "name": "Risk Evaluator",
          "description": "Real-time scoring against sanction lists and behavioural analytics.",
          "stack": "Python, FastAPI, Redis",
          "status": "beta",
          "lead": "Eugene Grishin",
          "repo": "ssh://git/egide/services/customer-onboarding/backend/risk-evaluator",
          "metrics": {
            "coverage": "98% match coverage"
          }
        }
      ],
      "qa": [
        {
          "id": "onboarding-regression",
          "name": "Onboarding Regression",
          "description": "Full regression scenario from application submission to product activation.",
          "stack": "Playwright, Allure",
          "status": "nightly",
          "lead": "Tatyana Zhuravleva",
          "cadence": "Every 4 hours",
          "coverage": "85% critical flows"
        },
        {
          "id": "api-contract-tests",
          "name": "API Contract Tests",
          "description": "Validation of platform contracts across REST and event schemas.",
          "stack": "Postman CLI, Newman",
          "status": "ci",
          "lead": "Mikhail Osipov",
          "cadence": "On each merge",
          "coverage": "100% public contracts"
        }
      ],
      "servicesTree": [
        {
          "name": "services/customer-onboarding",
          "type": "service",
          "description": "Service repository combining frontend, backend and QA assets.",
          "children": [
            {
              "name": "frontend",
              "type": "folder",
              "children": [
                {
                  "name": "pages",
                  "type": "folder",
                  "children": [
                    {
                      "name": "ApplicationFlow.tsx",
                      "type": "component",
                      "items": [
                        { "name": "component", "detail": "Renders onboarding steps and progress" },
                        { "name": "hooks", "detail": "useApplicationSteps, useKYCStatus" }
                      ]
                    },
                    {
                      "name": "DocumentsUpload.tsx",
                      "type": "component",
                      "items": [
                        { "name": "component", "detail": "Upload pipeline with OCR preview" },
                        { "name": "services", "detail": "docClient.requestScan, docClient.saveDraft" }
                      ]
                    }
                  ]
                },
                {
                  "name": "api",
                  "type": "folder",
                  "children": [
                    {
                      "name": "kycClient.ts",
                      "type": "module",
                      "items": [
                        { "name": "functions", "detail": "fetchApplicant, submitStep, pollStatus" },
                        { "name": "schemas", "detail": "ApplicantDTO, StepPayload" }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "backend",
              "type": "folder",
              "children": [
                {
                  "name": "workflow-engine",
                  "type": "module",
                  "items": [
                    { "name": "classes", "detail": "ApplicationSaga, SLAWatcher" },
                    { "name": "topics", "detail": "onboarding.status.changed, onboarding.sla.breached" },
                    { "name": "tasks", "detail": "Retry compensation, edge cases" }
                  ]
                },
                {
                  "name": "risk-evaluator",
                  "type": "module",
                  "items": [
                    { "name": "pipelines", "detail": "pep_screening, anomaly_detection" },
                    { "name": "scripts", "detail": "update_watchlists.py" }
                  ]
                }
              ]
            },
            {
              "name": "qa",
              "type": "folder",
              "children": [
                {
                  "name": "specs",
                  "type": "module",
                  "items": [
                    { "name": "journeys", "detail": "signup_smoke.json, recovery_flow.json" },
                    { "name": "reports", "detail": "allure-history, test-coverage.md" }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "payments-core",
      "slug": "payments-core",
      "name": "Payments Core",
      "summary": "Payment intake, routing and settlement across omni-channel gateways.",
      "mission": "Guarantee secure, real-time transaction processing for merchants worldwide.",
      "owner": "Payments Tribe",
      "lead": "Maxim Lavrov",
      "status": "production",
      "impact": "Critical",
      "sla": "99.99%",
      "area": "Payments",
      "repo": "ssh://git/egide/services/payments-core",
      "roadmap": [
        "Unified clearing calendar",
        "Intelligent retry engine for failed payments",
        "Realtime anomaly detection dashboards"
      ],
      "categoryNotes": {
        "frontend": "Merchant dashboards reuse platform design system and offer white-label configuration.",
        "backend": "Payment domains split into isolated bounded contexts with dedicated pipelines.",
        "qa": "Multiple staging environments and contract providers guard against regressions."
      },
      "frontend": [
        {
          "id": "merchant-dashboard",
          "name": "Merchant Dashboard",
          "description": "Vue 3 portal exposing payment streams, settlement status and dispute workflows.",
          "stack": "Vue 3, Pinia, Highcharts",
          "status": "prod",
          "lead": "Sergey Fomin",
          "repo": "ssh://git/egide/services/payments-core/frontend/merchant-dashboard",
          "metrics": {
            "nps": "54",
            "dailySessions": "12K sessions"
          }
        }
      ],
      "backend": [
        {
          "id": "payment-router",
          "name": "Payment Router",
          "description": "Go service balancing operations across gateways with retry policies.",
          "stack": "Go, gRPC, Kafka",
          "status": "prod",
          "lead": "Vlad Kolesnik",
          "repo": "ssh://git/egide/services/payments-core/backend/payment-router",
          "metrics": {
            "latency": "180ms P95",
            "volume": "2.1M tx/day"
          }
        },
        {
          "id": "settlement-service",
          "name": "Settlement Service",
          "description": "Settlement runs, reconciliation acts and ledger synchronisation.",
          "stack": "Java, Quarkus, PostgreSQL",
          "status": "prod",
          "lead": "Ekaterina Belova",
          "repo": "ssh://git/egide/services/payments-core/backend/settlement-service",
          "metrics": {
            "reports": "6K daily reports"
          }
        }
      ],
      "qa": [
        {
          "id": "payment-e2e",
          "name": "Payments E2E",
          "description": "End-to-end scenarios covering checkout, capture and refunds.",
          "stack": "Cypress, TypeScript",
          "status": "prod",
          "lead": "Yulia Gorina",
          "cadence": "Hourly",
          "coverage": "78% payment flows"
        },
        {
          "id": "load-benchmarks",
          "name": "Load Benchmarks",
          "description": "Performance profiling for card-present and card-not-present operations.",
          "stack": "k6, Grafana, Loki",
          "status": "weekly",
          "lead": "Artem Dubov",
          "cadence": "Weekly",
          "coverage": "Peak hours"
        }
      ],
      "servicesTree": [
        {
          "name": "services/payments-core",
          "type": "service",
          "description": "Mission-critical payment processing stack.",
          "children": [
            {
              "name": "frontend",
              "type": "folder",
              "children": [
                {
                  "name": "components",
                  "type": "folder",
                  "children": [
                    {
                      "name": "SettlementWidget.vue",
                      "type": "component",
                      "items": [
                        { "name": "props", "detail": "merchantId, timeframe" },
                        { "name": "services", "detail": "useSettlements, useAlerts" }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "backend",
              "type": "folder",
              "children": [
                {
                  "name": "payment-router",
                  "type": "module",
                  "items": [
                    { "name": "packages", "detail": "router, failover, audit" },
                    { "name": "handlers", "detail": "AuthorizeHandler, CaptureHandler" },
                    { "name": "scripts", "detail": "migration/001_create_operations.sql" }
                  ]
                },
                {
                  "name": "settlement-service",
                  "type": "module",
                  "items": [
                    { "name": "jobs", "detail": "closePeriodJob, disputeAggregator" },
                    { "name": "classes", "detail": "LedgerSyncService, TreasuryGateway" }
                  ]
                }
              ]
            },
            {
              "name": "qa",
              "type": "folder",
              "children": [
                {
                  "name": "scenarios",
                  "type": "module",
                  "items": [
                    { "name": "flows", "detail": "happy_path.cy.ts, refund.cy.ts" },
                    { "name": "data", "detail": "fixtures/cards.json, fixtures/terminals.json" }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "id": "insight-analytics",
      "slug": "insight-analytics",
      "name": "Insight Analytics",
      "summary": "Self-service analytics workspace for stakeholders with governed datasets.",
      "mission": "Deliver trustworthy data products and shorten decision lead time to minutes.",
      "owner": "Analytics Guild",
      "lead": "Olga Petrova",
      "status": "beta",
      "impact": "Medium",
      "sla": "99.9%",
      "area": "Analytics",
      "repo": "ssh://git/egide/services/insight-analytics",
      "roadmap": [
        "Realtime KPI stream for executives",
        "Data contract diff visualiser",
        "Self-healing pipelines for late arriving data"
      ],
      "categoryNotes": {
        "frontend": "React workspace assembled from platform micro frontends with feature toggles.",
        "backend": "Data mesh nodes orchestrated with dbt and streaming enrichment.",
        "qa": "Quality layer keeps datasets trustworthy via automated assertions."
      },
      "frontend": [
        {
          "id": "analytics-workbench",
          "name": "Analytics Workbench",
          "description": "Modular canvas with charts, dataset browser and KPI annotations.",
          "stack": "React, Recharts, Apollo",
          "status": "beta",
          "lead": "Roman Ivlev",
          "repo": "ssh://git/egide/services/insight-analytics/frontend/analytics-workbench",
          "metrics": {
            "dashboards": "320 live dashboards",
            "retention": "82% weekly"
          }
        }
      ],
      "backend": [
        {
          "id": "dataset-registry",
          "name": "Dataset Registry",
          "description": "Catalog service tracking ownership, schemas and freshness of datasets.",
          "stack": "Node.js, NestJS, PostgreSQL",
          "status": "beta",
          "lead": "Kirill Dubrov",
          "repo": "ssh://git/egide/services/insight-analytics/backend/dataset-registry",
          "metrics": {
            "datasets": "112 curated datasets"
          }
        },
        {
          "id": "stream-enricher",
          "name": "Stream Enricher",
          "description": "Flink job enriching customer events with product taxonomy and risk scores.",
          "stack": "Apache Flink, Scala, Kafka",
          "status": "beta",
          "lead": "Maria Klepova",
          "repo": "ssh://git/egide/services/insight-analytics/backend/stream-enricher",
          "metrics": {
            "lag": "< 3 seconds",
            "events": "480K events/min"
          }
        }
      ],
      "qa": [
        {
          "id": "data-quality",
          "name": "Data Quality",
          "description": "Automated data quality checks with alerts and anomaly scoring.",
          "stack": "Great Expectations, dbt, Airflow",
          "status": "ci",
          "lead": "Gleb Nazarov",
          "cadence": "Every delivery",
          "coverage": "112 tables"
        },
        {
          "id": "schema-guardian",
          "name": "Schema Guardian",
          "description": "Change management for event schemas and backward compatibility reports.",
          "stack": "OpenAPI Diff, Kafka TestKit",
          "status": "prod",
          "lead": "Elena Afanasyeva",
          "cadence": "Each release",
          "coverage": "58 contracts"
        }
      ],
      "servicesTree": [
        {
          "name": "services/insight-analytics",
          "type": "service",
          "description": "Analytics workspace with governed datasets and automation.",
          "children": [
            {
              "name": "frontend",
              "type": "folder",
              "children": [
                {
                  "name": "modules",
                  "type": "folder",
                  "children": [
                    {
                      "name": "DashboardBuilder.tsx",
                      "type": "component",
                      "items": [
                        { "name": "hooks", "detail": "useWidgetLibrary, useGridLayout" },
                        { "name": "tasks", "detail": "autosaveLayout, publishDraft" }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "backend",
              "type": "folder",
              "children": [
                {
                  "name": "dbt",
                  "type": "module",
                  "items": [
                    { "name": "models", "detail": "fact_customer_orders.sql, dim_product.sql" },
                    { "name": "macros", "detail": "freshness_check, ensure_not_null" }
                  ]
                },
                {
                  "name": "stream-enricher",
                  "type": "module",
                  "items": [
                    { "name": "operators", "detail": "JoinWithTaxonomy, RiskScoreProjector" },
                    { "name": "metrics", "detail": "lagMetric, throughputMetric" }
                  ]
                }
              ]
            },
            {
              "name": "qa",
              "type": "folder",
              "children": [
                {
                  "name": "contracts",
                  "type": "module",
                  "items": [
                    { "name": "tests", "detail": "dataset_schema_diff.yml, alerting_rules.yml" },
                    { "name": "scripts", "detail": "notify_slack.py" }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}
